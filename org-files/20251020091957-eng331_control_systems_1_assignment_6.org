:PROPERTIES:
:ID:       27d00bd4-2808-44ca-b13a-e414fe665cd1
:END:
#+title: ENG331 - Control Systems 1 - Assignment 6
#+date: [2025-10-20 Mon 09:19]
#+AUTHOR: Baley Eccles - 652137
#+FILETAGS: :Assignment:UTAS:2025:
#+LATEX_HEADER: \usepackage[a4paper, margin=2cm]{geometry}
#+LATEX_HEADER_EXTRA: \usepackage{minted}
#+LATEX_HEADER_EXTRA: \usepackage{fontspec}
#+LATEX_HEADER_EXTRA: \setmonofont{Iosevka}
#+LATEX_HEADER_EXTRA: \setminted{fontsize=\small, frame=single, breaklines=true}
#+LATEX_HEADER_EXTRA: \usemintedstyle{emacs}
#+LATEX_HEADER_EXTRA: \usepackage{float}
#+LATEX_HEADER_EXTRA: \usepackage[final]{pdfpages}
#+LATEX_HEADER_EXTRA: \setlength{\parindent}{0pt}
#+LATEX_HEADER_EXTRA: \setlength{\parskip}{1em}

* Question 1

** Controller 1

*** i
Choosing:
\[C_1(s) = \frac{K(s + 1)}{s + p_c}\]

To find the pole location we use:
\begin{align*}
(2k + 1)180^o &= \sum \theta_z - \sum \theta_p \\
(2k + 1)180^o &= 20.56 -71.57 -90.00 -108.43 + 108.43 - \theta_{p_c} \\
(2k + 1)180^o &= -141 - \theta_{p_c} \\
\Rightarrow \theta_{p_c} &= 39^o
\end{align*}

This allows us to find that the pole must be located at:
\begin{align*}
\tan^{-1}\left(\frac{3}{-2 + p_c}\right) &= 39^o \\
\Rightarrow p_c &= 5.7
\end{align*}

Hence:
\[C_1(s) =  K\frac{(s + 1)}{s + 5.7}\]

#+BEGIN_SRC octave :exports none :results output :session Q1
clc
clear
close all

if exist('OCTAVE_VERSION', 'builtin')
  set(0, "DefaultLineLineWidth", 2);
  set(0, "DefaultAxesFontSize", 25);
  warning('off');
  pkg load symbolic
end

syms s;

G = (s + 10)/((s + 1)*(s + 2)*(s + 3));
C_1 = (s + 1)/(s + 5.7);

%rlocus(G*C_1)

theta_1 = atan2 (3,(-2 +10))*180/pi
theta_2 = -atan2(3,(-2 +3))*180/pi
theta_3 = -atan2(3,(-2 +2))*180/pi

theta_4 = -atan2(3,(-2 +1))*180/pi
theta_5 = atan2 (3,(-2 +1))*180/pi

theta_sum = theta_1 + theta_2 + theta_3 + theta_4 + theta_5
printf("theta_sum = %.2f + %.2f + %.2f + %.2f + %.2f\n", theta_1, theta_2, theta_3, theta_4, theta_5)

#+END_SRC

#+RESULTS:
: theta_1 = 20.556
: theta_2 = -71.565
: theta_3 = -90
: theta_4 = -108.43
: theta_5 = 108.43
: theta_sum = -141.01
: theta_sum = 20.56 + -71.57 + -90.00 + -108.43 + 108.43

*** ii
\begin{align*}
K &= \frac{1}{|G(s)C_1(s)|} \\
K &= \frac{1}{\lvert\frac{(-2 + 3j) + 10}{((-2 + 3j) + 1)((-2 + 3j) + 2)((-2 + 3j) + 3)}\frac{((-2 + 3j) + 1)}{(-2 + 3j) + 5.7}\rvert} \\
\Rightarrow K &= 5.29
\end{align*}

#+BEGIN_SRC octave :exports none :results output :session Q1
K = 1/(subs(abs(G*C_1), s, -2 + 3*i))
vpa(K)
#+END_SRC

#+RESULTS:
: K = (sym)
: 
:   3⋅√1656370
:   ──────────
:      730
: ans = (sym) 5.2890426924671090262376605365072

*** iii
\begin{align*}
K_p &= \lim_{s\rightarrow0}C_1(s) \\
K_p &= \lim_{s\rightarrow0}\frac{5.29(s + 1)}{s + 5.7} \\
K_p &= 0.928 \\
\\
e_{step}(\infty) &= \frac{1}{1 + K_p} \\
e_{step}(\infty) &= \frac{1}{1 + 0.928} \\
e_{step}(\infty) &= 0.519
\end{align*}

** Controller 2

*** i
Choosing:
\[C_2(s) = \frac{K(s + 2)}{s + p_c}\]

To find the pole location we use:
\begin{align*}
(2k + 1)180^o &= \sum \theta_z - \sum \theta_p \\
(2k + 1)180^o &=  20.56 -71.57 -90.00 -108.43 + 90.00 - \theta_{p_c} \\
(2k + 1)180^o &= -159 - \theta_{p_c} \\
\Rightarrow \theta_{p_c} &= 21^o
\end{align*}

This allows us to find that the pole must be located at:
\begin{align*}
\tan^{-1}\left(\frac{3}{-2 + p_c}\right) &= 21^o \\
\Rightarrow p_c &= 9.815
\end{align*}

Hence:
\[C_2(s) =  K\frac{(s + 2)}{s + 9.815}\]

#+BEGIN_SRC octave :exports none :results output :session Q1
clc
clear
close all

if exist('OCTAVE_VERSION', 'builtin')
  set(0, "DefaultLineLineWidth", 2);
  set(0, "DefaultAxesFontSize", 25);
  warning('off');
  pkg load symbolic
end

syms s;

G = (s + 10)/((s + 1)*(s + 2)*(s + 3));
C_2 = (s + 2)/(s  + 9.815);

%rlocus(G*C_2)

theta_1 = atan2 (3,(-2 +10))*180/pi
theta_2 = -atan2(3,(-2 +3))*180/pi
theta_3 = -atan2(3,(-2 +2))*180/pi

theta_4 = -atan2(3,(-2 +1))*180/pi
theta_5 = atan2 (3,(-2 +2))*180/pi

theta_sum = theta_1 + theta_2 + theta_3 + theta_4 + theta_5
printf("theta_sum = %.2f + %.2f + %.2f + %.2f + %.2f\n", theta_1, theta_2, theta_3, theta_4, theta_5)

#+END_SRC

#+RESULTS:
: theta_1 = 20.556
: theta_2 = -71.565
: theta_3 = -90
: theta_4 = -108.43
: theta_5 = 90
: theta_sum = -159.44
: theta_sum = 20.56 + -71.57 + -90.00 + -108.43 + 90.00

*** ii
\begin{align*}
K &= \frac{1}{|G(s)C_2(s)|} \\
K &= \frac{1}{\lvert\frac{(-2 + 3j) + 10}{((-2 + 3j) + 1)((-2 + 3j) + 2)((-2 + 3j) + 3)}\frac{((-2 + 3j) + 2)}{(-2 + 3j) + 9.815}\rvert} \\
\Rightarrow K &= 9.79
\end{align*}

#+BEGIN_SRC octave :exports none :results output :session Q1
K = 1/(subs(abs(G*C_2), s, -2 + 3*i))
vpa(K)
#+END_SRC

#+RESULTS:
: K = (sym)
: 
:   3⋅√22735193
:   ───────────
:      1460
: ans = (sym) 9.7975552583844042543501180771205

*** iii
\begin{align*}
K_p &= \lim_{s\rightarrow0}C_2(s) \\
K_p &= \lim_{s\rightarrow0}\frac{9.79(s + 2)}{s +  9.815} \\
K_p &= 1.99 \\
\\
e_{step}(\infty) &= \frac{1}{1 + K_p} \\
e_{step}(\infty) &= \frac{1}{1 + 1.99} \\
e_{step}(\infty) &= 0.334
\end{align*}

* Question 2

** a
\begin{align*}
\frac{R(s)}{C(s)} &= \frac{-K\cdot PID(s)\cdot G(s)}{1 + K\cdot PID(s)\cdot G(s)} \\
\frac{R(s)}{C(s)} &= \frac{3 \left(s^{2} + 50 s + 625\right)}{s^{2} - 130 s - 1875}
\end{align*}

#+BEGIN_SRC octave :exports none :results output :session Q2
clc
clear
close all

if exist('OCTAVE_VERSION', 'builtin')
  set(0, "DefaultLineLineWidth", 2);
  set(0, "DefaultAxesFontSize", 25);
  warning('off');
  pkg load symbolic
end

syms s

G = (s + 25)/((s + 4)*(s + 5));
PID = -(s + 25)*(s + 4)/s;
K = 0.75;

R_C = -K*PID*G/(1 + K*PID*G);
R_C = simplify(R_C);
latex(R_C)

#+END_SRC

#+RESULTS:
: Symbolic pkg v3.2.2: Python communication link active, SymPy v1.14.0.
: \frac{3 \left(s^{2} + 50 s + 625\right)}{s^{2} - 130 s - 1875}

** b

\begin{align*}
PID(s) &= - 1000 C_{1} s - \frac{C_{1}}{C_{2}} - 5 - \frac{1}{200 C_{2} s} \\
PID(s) &= - \frac{\left(1000 C_{2} s + 1\right) \left(C_{1} R_{1} s + 1\right)}{C_{2} R_{1} s} \\
-\frac{(s + 4)(s + 10)}{s} &= - \frac{\left(1000 C_{2} s + 1\right) \left(C_{1} R_{1} s + 1\right)}{C_{2} R_{1} s} \\
- s - 29 - \frac{100}{s} &= - 1000 C_{1} s - 1 - \frac{1000}{R_{1}} - \frac{1}{C_{2} R_{1} s}
\end{align*}

Comparing coefficients means:

\[\begin{cases}
1 &= 1000C_1 \\
29 &= 1 + \frac{1000}{R_1} \\
100 &= \frac{1}{C_2R_1}
\end{cases}\]

Which gives:
\begin{align*}
C_1 &= 1\ mF \\
C_2 &= 280\ \mu F \\
R_1 &= 35.714\ \Omega
\end{align*}

#+BEGIN_SRC octave :exports none :results output :session Q2
syms s C_2 C_1 R_1

R_2 = 1e3;

PID_C = -((R_2/R_1 + C_2/C_2) + R_2*C_1*s + (1/(R_1*C_2))/(s));
latex(PID_C)
PID_C = factor(PID_C);
latex(PID_C)

latex(expand(PID_C))
latex(expand(PID))

equ1 = 1 == 1000*C_1;
equ2 = 29 == 1 + 1000/R_1;
equ3 = 100 == 1/(C_2*R_1);
sol = solve([equ1, equ2, equ3], [C_1, C_2, R_1])
vpa(sol.C_1)
vpa(sol.C_2)
vpa(sol.R_1)

#+END_SRC

#+RESULTS:
#+begin_example
- 1000 C_{1} s - 1 - \frac{1000}{R_{1}} - \frac{1}{C_{2} R_{1} s}
- \frac{1000 C_{1} C_{2} R_{1} s^{2} + C_{2} R_{1} s + 1000 C_{2} s + 1}{C_{2} R_{1} s}
- 1000 C_{1} s - 1 - \frac{1000}{R_{1}} - \frac{1}{C_{2} R_{1} s}
- s - 29 - \frac{100}{s}
sol =

  scalar structure containing the fields:

    C_1 =

      <class sym>

    C_2 =

      <class sym>

    R_1 =

      <class sym>
ans = (sym) 0.0010000000000000000000000000000000
ans = (sym) 0.00028000000000000000000000000000000
ans = (sym) 35.714285714285714285714285714286
#+end_example

* Question 3

** a
The controller must be capable of doing steady state for a ramp input, hence two integrator are required, so lets choose the structure:
\[C(s) = \frac{s + z_c}{s^2}\]

A required $\zeta$ for a 25% overshoot corresponds to $\zeta = 0.403$.

Next we must find the location at which the above occurs on the root locus

\[\begin{cases}
2 &= \frac{4}{0.403 \omega_n} \\
\sigma_d &= 0.403 \omega_n \\
\omega_d &= \omega_n\sqrt{0.40e^2 - 1}
\end{cases}\]

\[\Rightarrow \sigma_d = -2\]
And
\[\Rightarrow \omega_d = 4.532j\]

Next we find the angle required by the zero:

\begin{align*}
(2k + 1)180^o &= \sum \theta_z - \sum \theta_p \\
(2k + 1)180^o &=  -371.91 + \theta_{z_c} \\
\Rightarrow \theta_{z_c} &= 11.9^o
\end{align*}

This allows us to find that the zero must be located at:
\begin{align*}
\tan^{-1}\left(\frac{4.532}{-2 + z_c}\right) &= 11.9^o \\
\Rightarrow z_c &= -23.5
\end{align*}

Hence:
\[C(s) = \frac{s + 23.5}{s^2}\]

#+BEGIN_SRC octave :exports none :results output :session Q3
clc
clear
close all

if exist('OCTAVE_VERSION', 'builtin')
  set(0, "DefaultLineLineWidth", 2);
  set(0, "DefaultAxesFontSize", 25);
  warning('off');
  pkg load symbolic
end

syms zeta w_n sig_d


equ = 0.25 == exp(-zeta*pi/(sqrt(1 - zeta^2)));
z = vpa(solve(equ, zeta))

equ2 = 2 == 4/(z*w_n);
equ3 = sig_d == z*w_n;
sol = solve(equ2, equ3, [w_n, sig_d])
s_d = sol.sig_d
omega_n = sol.w_n

w_d = omega_n*sqrt(z^2 - 1)

theta_1 = atan2 (4.532, (-2 + 4))*180/pi
theta_2 = atan2(4.532, (-2 + 6))*180/pi
theta_3 = atan2(4.532, (-2 + 10))*180/pi
theta_4 = atan2(4.532, (-2 + 0))*180/pi
theta_5 = atan2 (4.532, (-2 + 0))*180/pi

theta_sum = theta_1 + theta_2 + theta_3 + theta_4 + theta_5
#+END_SRC

#+RESULTS:
#+begin_example
z = (sym) 0.40371275194342068038575605143555
sol =

  scalar structure containing the fields:

    sig_d =

      <class sym>

    w_n =

      <class sym>
s_d = (sym) 2.00000000000000
omega_n = (sym) 4.95401740562383
w_d = (sym) 4.532360141827193691876508276146⋅ⅈ
theta_1 = 66.188
theta_2 = 48.568
theta_3 = 29.532
theta_4 = 113.81
theta_5 = 113.81
theta_sum = 371.91
#+end_example

** b
\begin{align*}
C(s)G(s) &= \frac{s + 23.5}{s^2}\cdot \frac{K}{(s + 4)(s + 6)(s  + 10)} \\
C(s)G(s) &= \frac{K(s + 23.5)}{s^2(s + 4)(s + 6)(s  + 10)}
\end{align*}

We have two integrators, so it would be valid to approximate this as a second order system. Each of the poles/zeros are greater than 10 times away than the two poles at the origin. The second order approximation would be of the form:

\[G_{2nd}(s) = \frac{KK_{2nd}}{s^2}\]

Due to the two integrators the closed loop will have zero steady state error for both step and ramp inputs. 
