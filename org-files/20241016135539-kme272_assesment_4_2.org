:PROPERTIES:
:ID:       478cc0be-9fdb-491c-b4f3-f26c12f61de7
:END:
#+title: KME272 - Assesment 4.2
#+date: [2024-10-16 Wed 13:55]
#+AUTHOR: Baley Eccles - 652137
#+FILETAGS: :Assignment:TODO:UTAS:2024:
#+STARTUP: latexpreview

* KME272 - Assesment 4.2



#+BEGIN_SRC R :session Q1 :export code :results output :session Part1
OA <- read.csv(file="athlete_events.csv", header=TRUE)
OA$Medal[which(is.na(OA$Medal))] <- "None"
OA$Medal <- as.factor(OA$Medal)
OA$Sex <- as.factor(OA$Sex)
str(OA)
#+END_SRC

#+RESULTS:
#+begin_example
'data.frame':	271116 obs. of  15 variables:
 $ ID    : int  1 2 3 4 5 5 5 5 5 5 ...
 $ Name  : chr  "A Dijiang" "A Lamusi" "Gunnar Nielsen Aaby" "Edgar Lindenau Aabye" ...
 $ Sex   : Factor w/ 2 levels "F","M": 2 2 2 2 1 1 1 1 1 1 ...
 $ Age   : int  24 23 24 34 21 21 25 25 27 27 ...
 $ Height: int  180 170 NA NA 185 185 185 185 185 185 ...
 $ Weight: num  80 60 NA NA 82 82 82 82 82 82 ...
 $ Team  : chr  "China" "China" "Denmark" "Denmark/Sweden" ...
 $ NOC   : chr  "CHN" "CHN" "DEN" "DEN" ...
 $ Games : chr  "1992 Summer" "2012 Summer" "1920 Summer" "1900 Summer" ...
 $ Year  : int  1992 2012 1920 1900 1988 1988 1992 1992 1994 1994 ...
 $ Season: chr  "Summer" "Summer" "Summer" "Summer" ...
 $ City  : chr  "Barcelona" "London" "Antwerpen" "Paris" ...
 $ Sport : chr  "Basketball" "Judo" "Football" "Tug-Of-War" ...
 $ Event : chr  "Basketball Men's Basketball" "Judo Men's Extra-Lightweight" "Football Men's Football" "Tug-Of-War Men's Tug-Of-War" ...
 $ Medal : Factor w/ 4 levels "Bronze","Gold",..: 3 3 3 2 3 3 3 3 3 3 ...
#+end_example

 - Do the distributions of male *vs.* female athletes' *age* and *weight* differ? (e.g., are male athletes generally gamma-distributed and female athletes normally distributed? If they both have the same kind of distribution, do they have different characteristics?)
#+BEGIN_SRC R :session Q1 :export code :results output :session Part1
male_data <- subset(OA, Sex == 'M' & !is.na(Age) & !is.na(Weight) & !is.na(Sex))
female_data <- subset(OA, Sex == 'F' & !is.na(Age) & !is.na(Weight) & !is.na(Sex))

# Plot histograms and density plots for age
png("athlete_age_distribution.png", width = 800, height = 800)
par(mfrow = c(2, 2))
hist(male_data$Age, main = "Male Athletes' Age", xlab = "Age", col = "blue", breaks = 20)
hist(female_data$Age, main = "Female Athletes' Age", xlab = "Age", col = "pink", breaks = 20)
plot(density(male_data$Age), main = "Density of Male Athletes' Age", col = "blue", lwd = 2)
plot(density(female_data$Age), main = "Density of Female Athletes' Age", col = "pink", lwd = 2)
dev.off()

png("athlete_weight_distribution.png", width = 800, height = 800)
par(mfrow = c(2, 2))
hist(male_data$Weight, main = "Male Athletes' Weight", xlab = "Weight", col = "blue", breaks = 20)
hist(female_data$Weight, main = "Female Athletes' Weight", xlab = "Weight", col = "pink", breaks = 20)
plot(density(male_data$Weight, na.rm = TRUE), main = "Density of Male Athletes' Weight", col = "blue", lwd = 2)
plot(density(female_data$Weight, na.rm = TRUE), main = "Density of Female Athletes' Weight", col = "pink", lwd = 2)

dev.off()

#+END_SRC

#+RESULTS:
: null device
:           1
: null device
:           1

[[file:athlete_age_distribution.png]]

[[file:athlete_weight_distribution.png]]
:TODO: TALK ABOUT THE DIIFFERENCE IN DATA
Both the age and weight for each gender appears to be gamma distributed.


#+BEGIN_SRC R :session Q1 :export code :results output :session Part1
mom_gamma <- function(data) {
  mean_est <- mean(data)
  var_est <- var(data)
  shape_est <- mean_est^2 / var_est
  scale_est <- var_est / mean_est
  return(list(shape=shape_est, scale=scale_est))
}

mom_gamma_age_male = mom_gamma(male_data$Age)
print(mom_gamma_age_male)
mom_gamma_age_female = mom_gamma(female_data$Age)
print(mom_gamma_age_female)

mom_gamma_weight_male = mom_gamma(male_data$Weight)
print(mom_gamma_weight_male)
mom_gamma_weight_female = mom_gamma(male_data$Weight)
print(mom_gamma_weight_female)

# Age - Male
png("male_age_gamma.png", width = 800, height = 800)
hist(male_data$Age, probability = TRUE, main="Gamma Fit for Age - Males", xlab="Age", col="lightblue", breaks=20)
curve(dgamma(x, shape=mom_gamma_age_male$shape, scale=mom_gamma_age_male$scale),
      col="blue", lwd=2, add=TRUE)
dev.off()

# Age - Female
png("female_age_gamma.png", width = 800, height = 800)
hist(female_data$Age, probability = TRUE, main="Gamma Fit for Age - Females", xlab="Age", col="lightpink", breaks=20)
curve(dgamma(x, shape=mom_gamma_age_female$shape, scale=mom_gamma_age_female$scale),
      col="red", lwd=2, add=TRUE)
dev.off()

# Weight - Male
png("male_weight_gamma.png", width = 800, height = 800)
hist(male_data$Weight, probability = TRUE, main="Gamma Fit for Weight - Males", xlab="Weight", col="lightblue", breaks=20)
curve(dgamma(x, shape=mom_gamma_weight_male$shape, scale=mom_gamma_weight_male$scale),
      col="blue", lwd=2, add=TRUE)
dev.off()

# Weight - Female
png("female_weight_gamma.png", width = 800, height = 800)
hist(female_data$Weight, probability = TRUE, main="Gamma Fit for Weight - Females", xlab="Weight", col="lightpink", breaks=20)
curve(dgamma(x, shape=mom_gamma_weight_female$shape, scale=mom_gamma_weight_female$scale),
      col="red", lwd=2, add=TRUE)
dev.off()
#+END_SRC

#+RESULTS:
#+begin_example
$shape
[1] 22.97346

$scale
[1] 1.117522
$shape
[1] 18.38664

$scale
[1] 1.293223
$shape
[1] 32.90154

$scale
[1] 2.303424
$shape
[1] 32.90154

$scale
[1] 2.303424
null device
          1
null device
          1
null device
          1
null device
          1
#+end_example
#+ATTR_ORG: :width 300
[[file:male_age_gamma.png]]
[[file:male_weight_gamma.png]]
[[file:female_age_gamma.png]]
[[file:female_weight_gamma.png]]

It looks like the gamma distribution fits all the distributions, but the female weight one.
   - Use a Q-Q plot or chi-square test with binning (or some other appropriate means), to judge how well this fits the distribution.

#+BEGIN_SRC R :session Q1 :export code :results output :session Part1
# Generate theoretical quantiles from the fitted gamma distribution
gamma_qq_plot <- function(data, shape, scale, main_title) {
  # Sort data and calculate theoretical quantiles
  theoretical_quantiles <- qgamma(ppoints(length(data)), shape = shape, scale = scale)
  # Plot Q-Q plot
  qqplot(theoretical_quantiles, sort(data), main = main_title,
         xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
  abline(0, 1, col = "red")  # Adds a reference line
}

png("male_age_qq.png", width = 800, height = 800)
gamma_qq_plot(male_data$Age, shape = mom_gamma_age_male$shape,
              scale = mom_gamma_age_male$scale, main_title = "Q-Q Plot for Gamma Fit - Age (Males)")
dev.off()
png("female_age_qq.png", width = 800, height = 800)
gamma_qq_plot(female_data$Age, shape = mom_gamma_age_female$shape,
              scale = mom_gamma_age_female$scale, main_title = "Q-Q Plot for Gamma Fit - Age (Females)")
dev.off()
png("male_weight_qq.png", width = 800, height = 800)
gamma_qq_plot(male_data$Weight, shape = mom_gamma_weight_male$shape,
              scale = mom_gamma_weight_male$scale, main_title = "Q-Q Plot for Gamma Fit - Weight (Males)")
dev.off()
png("female_weight_qq.png", width = 800, height = 800)
gamma_qq_plot(female_data$Weight, shape = mom_gamma_weight_female$shape,
              scale = mom_gamma_weight_female$scale, main_title = "Q-Q Plot for Gamma Fit - Weight (Females)")
dev.off()
#+END_SRC

#+RESULTS:
: null device
:           1
: null device
:           1
: null device
:           1
: null device
:           1
#+ATTR_ORG: :width 300
[[file:male_age_qq.png]]
[[file:female_age_qq.png]]
[[file:male_weight_qq.png]]
[[file:female_weight_qq.png]]


   - Comment on these results to confirm or deny that the male and female athletes' age and weight distributions differ.
     :TODO: TALK ABOUT HOW THEY DIFFER
From the Q-Q plots it appears that the gamma distribution fits the male and female age well, and the male weight but not the female weight. This is because most of the points are close to the line with the age and male weight, but no the female weight. This suggests that the female weight is not gamma distributed.

 - Select a favourite sport and create a copy of the data containing only data for that sport. For example, if you were interested in curling, you might use ~Athletics <- OA[which(OA$Sport=="Athletics"),]~.  Now, answer these questions:
#+BEGIN_SRC R :session Q1 :export code :results output :session Part1
Football <- OA[which(OA$Sport=="Football"),]
#str(Football)
#+END_SRC

#+RESULTS:

   - Are the heights, weights and ages of athletes in this sport *changing* over time?
#+BEGIN_SRC R :session Q1 :export code :results output :session Part1
library(ggplot2)
Football_height_clean <- Football[is.finite(Football$Height) & is.finite(Football$Year), ]
Football_weight_clean <- Football[is.finite(Football$Weight) & is.finite(Football$Year), ]
Football_age_clean <- Football[is.finite(Football$Age) & is.finite(Football$Year), ]


png("football_height_time.png", width = 800, height = 800)
ggplot(Football_height_clean, aes(x = Year, y = Height)) +
  geom_point(color = "blue", alpha = 0.5) +
  geom_smooth(method = "loess", color = "red", se = FALSE) +
  labs(title = "Height Over Time", x = "Year", y = "Height (cm)") +
  theme_minimal()
dev.off()

png("football_weight_time.png", width = 800, height = 800)
ggplot(Football_weight_clean, aes(x = Year, y = Weight)) +
  geom_point(color = "blue", alpha = 0.5) +
  geom_smooth(method = "loess", color = "red", se = FALSE) +
  labs(title = "Weight Over Time", x = "Year", y = "Weight (kg)") +
  theme_minimal()
dev.off()

png("football_age_time.png", width = 800, height = 800)
ggplot(Football_age_clean, aes(x = Year, y = Age)) +
  geom_point(color = "blue", alpha = 0.5) +
  geom_smooth(method = "loess", color = "red", se = FALSE) +
  labs(title = "Age Over Time", x = "Year", y = "Age (years)") +
  theme_minimal()
dev.off()
#+END_SRC

#+RESULTS:
: [1m[22m`geom_smooth()` using formula = 'y ~ x'
: null device
:           1
: [1m[22m`geom_smooth()` using formula = 'y ~ x'
: null device
:           1
: [1m[22m`geom_smooth()` using formula = 'y ~ x'
: null device
:           1

#+ATTR_ORG: :width 300
[[file:football_height_time.png]]
[[file:football_weight_time.png]]
[[file:football_age_time.png]]

The weight has gone down considerably since the start of the data being recorded. The height has remained relatively constant over time. Both the weight and height have a bump around 1980, which is not present in the age. The age has also remained mostly constant over time.

   - Is there a change in the distribution of BMI over time?  The BMI is calculated as (mass in kg) / (height in metres, squared).  For example, someone 1.8m tall with a mass of 80kg has a BMI of $(80/(1.8^2)) \approx 24.7.$
#+BEGIN_SRC R :session Q1 :export code :results output :session Part1
Football$BMI <- Football$Weight/(((10^-2)*Football$Height)^2)
png("football_BMI_time.png", width = 800, height = 800)
ggplot(Football, aes(x = Year, y = BMI)) +
  geom_point(color = "blue", alpha = 0.5) +
  geom_smooth(method = "loess", color = "red", se = FALSE) +
  labs(title = "BMI Over Time", x = "Year", y = "BMI (kg/m^2)") +
  theme_minimal()
dev.off()
#+END_SRC

#+RESULTS:
: [1m[22m`geom_smooth()` using formula = 'y ~ x'
: Warning messages:
: 1: [1m[22mRemoved 2213 rows containing non-finite outside the scale range (`stat_smooth()`).
: 2: [1m[22mRemoved 2213 rows containing missing values or values outside the scale range (`geom_point()`).
: null device
:           1

#+ATTR_ORG: :width 300
[[file:football_BMI_time.png]]
The BMI has changed over time, it has gone down.

   - **Extension:** Does being *taller*, *heavier* or *older* help you *win* in this sport? (That is, are medallists significantly taller, etc., than non-medallists in this sport? By how much?)


#+BEGIN_SRC R :session Q1 :export code :results output :session Part1 :TODO: SAVE PLOTS
library(ggplot2)
library(dplyr)

# Filter medalists and non-medalists
medal_data <- Football %>% filter(!is.na(Medal))
non_medal_data <- Football %>% filter(is.na(Medal))

# Filter out non-finite values for Height, Weight, and Age for plotting
Football_clean <- Football %>%
  filter(is.finite(Height), is.finite(Weight), is.finite(Age))

# Plot distributions of heights, separated by medal category and sex
ggplot(Football_clean, aes(x = Height, fill = Medal)) +
  geom_density(alpha = 0.5) +
  facet_wrap(~ Sex) +
  labs(title = "Height Distribution by Medal Category and Sex", x = "Height (cm)", y = "Density") +
  theme_minimal()

# Plot distributions of weights, separated by medal category and sex
ggplot(Football_clean, aes(x = Weight, fill = Medal)) +
  geom_density(alpha = 0.5) +
  facet_wrap(~ Sex) +
  labs(title = "Weight Distribution by Medal Category and Sex", x = "Weight (kg)", y = "Density") +
  theme_minimal()

# Plot distributions of ages, separated by medal category and sex
ggplot(Football_clean, aes(x = Age, fill = Medal)) +
  geom_density(alpha = 0.5) +
  facet_wrap(~ Sex) +
  labs(title = "Age Distribution by Medal Category and Sex", x = "Age (years)", y = "Density") +
  theme_minimal()

# Calculate mean height, weight, and age for each group (Medalist vs Non-Medalist)
summary_stats <- Football %>%
  group_by(Medal) %>%
  summarize(
    Mean_Height = mean(Height, na.rm = TRUE),
    Mean_Weight = mean(Weight, na.rm = TRUE),
    Mean_Age = mean(Age, na.rm = TRUE),
    Count = n()
  )

# Display the summary statistics
print(summary_stats)

#+END_SRC

#+RESULTS:
: [38;5;246m# A tibble: 4 × 5[39m
:   Medal  Mean_Height Mean_Weight Mean_Age Count
:   [3m[38;5;246m<fct>[39m[23m        [3m[38;5;246m<dbl>[39m[23m       [3m[38;5;246m<dbl>[39m[23m    [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<int>[39m[23m
: [38;5;250m1[39m Bronze        176.        71.0     24.1   543
: [38;5;250m2[39m Gold          175.        70.2     24.6   515
: [38;5;250m3[39m None          175.        70.4     23.5  [4m5[24m174
: [38;5;250m4[39m Silver        176.        71.0     23.8   513

   - To answer this question you could begin by plotting distributions of heights, separated into male and female athletes, for each medal category, and then estimate the distribution, or mean height of medal winners and compare it with the mean heights of the non-medallists: are they the same?
|   | Medal  | Mean Height | Mean Weight | Mean Age | Count |
| 1 | Bronze |        176. |        71.0 |     24.1 |   543 |
| 2 | Gold   |        175. |        70.2 |     24.6 |   515 |
| 3 | None   |        175. |        70.4 |     23.5 |  5174 |
| 4 | Silver |        176. |        71.0 |     23.8 |   513 |
Height and weight appear to be non-factors, the mean of each medal are similar to one another. The age appears to be a minor factor, being slightly older increases your chances of getting a medal.
   - **Extension:** Is this a good representation of how the general human population has changed in the last 120 years?  Justify your answer.
This data does not represent how the general human population has nagged over time, as this data only includes Olympic athletes. The general population is not an Olympic athlete, so this data should not be used to estimate the general population. On top of that there are many factors that have may have changed in Olympic athletes and not other people, for example, Olympic athletes are more inclined to maintain a healthier diet. This data represents the *peak* human, and not the general population.

 - The various countries often compete for medal tally: the total number of medals won, number of golds, etc.  Use the data set to estimate the following:
   - What is the country that tends to win the most medals per athlete?
#+BEGIN_SRC R :session Q1 :export code :results output :session Part1 :TODO: SAVE PLOTS
library(dplyr)

# Calculate medals per athlete by country
medals_per_athlete <- OA %>%
  filter(!is.na(Medal)) %>%
  group_by(NOC) %>%
  summarize(
    Total_Medals = n(),
    Unique_Athletes = n_distinct(ID),
    Medals_per_Athlete = Total_Medals / Unique_Athletes
  ) %>%
  arrange(desc(Medals_per_Athlete))

# Display the top country
head(medals_per_athlete, 1)
#+END_SRC

#+RESULTS:
: [38;5;246m# A tibble: 1 × 4[39m
:   NOC   Total_Medals Unique_Athletes Medals_per_Athlete
:   [3m[38;5;246m<chr>[39m[23m        [3m[38;5;246m<int>[39m[23m           [3m[38;5;246m<int>[39m[23m              [3m[38;5;246m<dbl>[39m[23m
: [38;5;250m1[39m LIE            369             131               2.82

|   | NOC | Total_Medals | Unique_Athletes | Medals_per_Athlete |
| 1 | NZL |           80 |              58 |               1.38 |

   - The country with the most extreme (non-infinite) bias in male:female athletes (that is, the one with the highest or lowest ratio of the two).
#+BEGIN_SRC R :session Q1 :export code :results output :session Part1 :TODO: SAVE PLOTS
# Calculate male-to-female ratio by country
gender_ratio <- OA %>%
  group_by(NOC) %>%
  summarize(
    Male_Athletes = sum(Sex == "M"),
    Female_Athletes = sum(Sex == "F"),
    Male_Female_Ratio = Male_Athletes / Female_Athletes
  ) %>%
  filter(is.finite(Male_Female_Ratio)) %>%
  arrange(desc(abs(log(Male_Female_Ratio))))  # To find the most extreme ratio

# Display the top country with extreme male-to-female ratio
head(gender_ratio, 1)

#+END_SRC

#+RESULTS:
: [38;5;246m# A tibble: 1 × 4[39m
:   NOC   Male_Athletes Female_Athletes Male_Female_Ratio
:   [3m[38;5;246m<chr>[39m[23m         [3m[38;5;246m<int>[39m[23m           [3m[38;5;246m<int>[39m[23m             [3m[38;5;246m<dbl>[39m[23m
: [38;5;250m1[39m BOH             151               2              75.5


|   | NOC | Male_Athletes | Female_Athletes | Male_Female_Ratio |
| 1 | BOH |           151 |               2 |              75.5 |

   - The conditional probability that, given you are an American athlete (USA), you will win a medal (you can do this using just one line of the OA data frame)
#+BEGIN_SRC R :session Q1 :export code :results output :session Part1 :TODO: SAVE PLOTS
# Conditional probability that a USA athlete wins a medal
usa_medal_probability <- OA %>%
  filter(OA$NOC == "USA") %>%
  summarize(Probability = mean(!is.na(Medal)))

usa_medal_probability

#+END_SRC

#+RESULTS:
: Probability
: 1           1

   - **Optional extension:** What, if anything, strikes you as interesting or surprising in this aspect of the data? Explain and provide a statistical analysis to test this.  (E.g., if you think it one country excels in a particular sport or event, calculate some statistic that illustrates, or possibly disproves, your point.)
