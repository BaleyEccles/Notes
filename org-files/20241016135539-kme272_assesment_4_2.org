:PROPERTIES:
:ID:       478cc0be-9fdb-491c-b4f3-f26c12f61de7
:END:
#+title: KME272 - Assesment 4.2
#+date: [2024-10-16 Wed 13:55]
#+AUTHOR: Baley Eccles - 652137
#+FILETAGS: :Assignment:UTAS:2024:
#+STARTUP: latexpreview
#+LATEX_HEADER: \usepackage[a4paper, margin=2cm]{geometry}
#+LATEX_HEADER_EXTRA: \usepackage{minted}
#+LATEX_HEADER_EXTRA: \usepackage{fontspec}
#+LATEX_HEADER_EXTRA: \setmonofont{Iosevka}
#+LATEX_HEADER_EXTRA: \setminted{fontsize=\small, frame=single, breaklines=true}
#+LATEX_HEADER_EXTRA: \usemintedstyle{emacs}
#+LATEX_HEADER_EXTRA: \usepackage[backend=biber,style=apa]{biblatex}
#+LATEX_HEADER_EXTRA: \addbibresource{ENG204-Ass2.bib}
#+LATEX_HEADER_EXTRA: \usepackage{float}

* KME272 - Assesment 4.2
** Olympic Athlete Analysation
#+BEGIN_SRC R :session Q1 :export code :results output :session Part1
OA <- read.csv(file="athlete_events.csv", header=TRUE)
OA$Medal[which(is.na(OA$Medal))] <- "None"
OA$Medal <- as.factor(OA$Medal)
OA$Sex <- as.factor(OA$Sex)
str(OA)
#+END_SRC

#+RESULTS:
#+begin_example
'data.frame':	271116 obs. of  15 variables:
 $ ID    : int  1 2 3 4 5 5 5 5 5 5 ...
 $ Name  : chr  "A Dijiang" "A Lamusi" "Gunnar Nielsen Aaby" "Edgar Lindenau Aabye" ...
 $ Sex   : Factor w/ 2 levels "F","M": 2 2 2 2 1 1 1 1 1 1 ...
 $ Age   : int  24 23 24 34 21 21 25 25 27 27 ...
 $ Height: int  180 170 NA NA 185 185 185 185 185 185 ...
 $ Weight: num  80 60 NA NA 82 82 82 82 82 82 ...
 $ Team  : chr  "China" "China" "Denmark" "Denmark/Sweden" ...
 $ NOC   : chr  "CHN" "CHN" "DEN" "DEN" ...
 $ Games : chr  "1992 Summer" "2012 Summer" "1920 Summer" "1900 Summer" ...
 $ Year  : int  1992 2012 1920 1900 1988 1988 1992 1992 1994 1994 ...
 $ Season: chr  "Summer" "Summer" "Summer" "Summer" ...
 $ City  : chr  "Barcelona" "London" "Antwerpen" "Paris" ...
 $ Sport : chr  "Basketball" "Judo" "Football" "Tug-Of-War" ...
 $ Event : chr  "Basketball Men's Basketball" "Judo Men's Extra-Lightweight" "Football Men's Football" "Tug-Of-War Men's Tug-Of-War" ...
 $ Medal : Factor w/ 4 levels "Bronze","Gold",..: 3 3 3 2 3 3 3 3 3 3 ...
#+end_example

To determine how each genders height and weight is distributed we can look at their histograms and make guesses from there. However we will need to do more analysis to verify our findings. From the histograms we can also find how the genders differ from one another.
#+BEGIN_SRC R :session Q1 :export code :results output :session Part1
male_data <- subset(OA, Sex == 'M' & !is.na(Age) & !is.na(Weight) & !is.na(Sex))
female_data <- subset(OA, Sex == 'F' & !is.na(Age) & !is.na(Weight) & !is.na(Sex))

# Plot histograms and density plots for age
png("athlete_age_distribution.png", width = 800, height = 800)
par(mfrow = c(2, 2))
hist(male_data$Age, main = "Male Athletes' Age", xlab = "Age", col = "blue", breaks = 20)
hist(female_data$Age, main = "Female Athletes' Age", xlab = "Age", col = "pink", breaks = 20)
plot(density(male_data$Age), main = "Density of Male Athletes' Age", col = "blue", lwd = 2)
plot(density(female_data$Age), main = "Density of Female Athletes' Age", col = "pink", lwd = 2)
dev.off()

png("athlete_weight_distribution.png", width = 800, height = 800)
par(mfrow = c(2, 2))
hist(male_data$Weight, main = "Male Athletes' Weight", xlab = "Weight", col = "blue", breaks = 20)
hist(female_data$Weight, main = "Female Athletes' Weight", xlab = "Weight", col = "pink", breaks = 20)
plot(density(male_data$Weight, na.rm = TRUE), main = "Density of Male Athletes' Weight", col = "blue", lwd = 2)
plot(density(female_data$Weight, na.rm = TRUE), main = "Density of Female Athletes' Weight", col = "pink", lwd = 2)

dev.off()

#+END_SRC

#+RESULTS:
: null device
:           1
: null device
:           1

#+ATTR_ORG: :width 300
[[file:athlete_age_distribution.png]]
[[file:athlete_weight_distribution.png]]

Both the age and weight for each gender appears to be gamma distributed. Males appear to be slightly heavier than females. Both males and females appear most frequently at the same age.

We can use the method of moments technique to fit a distribution to the histograms.
#+BEGIN_SRC R :session Q1 :export code :results output :session Part1
mom_gamma <- function(data) {
  mean_est <- mean(data)
  var_est <- var(data)
  shape_est <- mean_est^2 / var_est
  scale_est <- var_est / mean_est
  return(list(shape=shape_est, scale=scale_est))
}

mom_gamma_age_male = mom_gamma(male_data$Age)
print(mom_gamma_age_male)
mom_gamma_age_female = mom_gamma(female_data$Age)
print(mom_gamma_age_female)

mom_gamma_weight_male = mom_gamma(male_data$Weight)
print(mom_gamma_weight_male)
mom_gamma_weight_female = mom_gamma(female_data$Weight)
print(mom_gamma_weight_female)

# Age - Male
png("male_age_gamma.png", width = 800, height = 800)
hist(male_data$Age, probability = TRUE, main="Gamma Fit for Age - Males", xlab="Age", col="lightblue", breaks=20)
curve(dgamma(x, shape=mom_gamma_age_male$shape, scale=mom_gamma_age_male$scale),
      col="blue", lwd=2, add=TRUE)
dev.off()

# Age - Female
png("female_age_gamma.png", width = 800, height = 800)
hist(female_data$Age, probability = TRUE, main="Gamma Fit for Age - Females", xlab="Age", col="lightpink", breaks=20)
curve(dgamma(x, shape=mom_gamma_age_female$shape, scale=mom_gamma_age_female$scale),
      col="red", lwd=2, add=TRUE)
dev.off()

# Weight - Male
png("male_weight_gamma.png", width = 800, height = 800)
hist(male_data$Weight, probability = TRUE, main="Gamma Fit for Weight - Males", xlab="Weight", col="lightblue", breaks=20)
curve(dgamma(x, shape=mom_gamma_weight_male$shape, scale=mom_gamma_weight_male$scale),
      col="blue", lwd=2, add=TRUE)
dev.off()

# Weight - Female
png("female_weight_gamma.png", width = 800, height = 800)
hist(female_data$Weight, probability = TRUE, main="Gamma Fit for Weight - Females", xlab="Weight", col="lightpink", breaks=20)
curve(dgamma(x, shape=mom_gamma_weight_female$shape, scale=mom_gamma_weight_female$scale),
      col="red", lwd=2, add=TRUE)
dev.off()
#+END_SRC

#+RESULTS:
#+begin_example
$shape
[1] 22.97346

$scale
[1] 1.117522
$shape
[1] 18.38664

$scale
[1] 1.293223
$shape
[1] 32.90154

$scale
[1] 2.303424
$shape
[1] 34.55202

$scale
[1] 1.737214
null device
          1
null device
          1
null device
          1
#+end_example
#+ATTR_ORG: :width 300
[[file:male_age_gamma.png]]
[[file:male_weight_gamma.png]]
[[file:female_age_gamma.png]]
[[file:female_weight_gamma.png]]

It looks like the gamma distribution fits all the distributions. As previously stated the females weight appears to be gamma distributed. Lets also try a normal distribution on the females weight.
#+BEGIN_SRC R :session Q1 :export code :results output :session Part1
mom_normal <- function(data) {
  mean_est <- mean(data, na.rm = TRUE)
  sd_est <- sd(data, na.rm = TRUE)
  return(list(mean = mean_est, sd = sd_est))
}

mom_normal_weight_female = mom_normal(female_data$Weight)
print(mom_gamma_weight_female)

png("female_weight_normal.png", width = 800, height = 800)
hist(female_data$Weight, probability = TRUE, main="Normal Fit for Weight - Females", xlab="Weight", col="lightpink", breaks=20)
curve(dnorm(x, mean=mom_normal_weight_female$mean, sd=mom_normal_weight_female$sd),
      col="red", lwd=2, add=TRUE)
dev.off()
#+END_SRC

#+RESULTS:
: $shape
: [1] 32.90154
:
: $scale
: [1] 2.303424
: null device
:           1

[[file:female_weight_normal.png]]
As we can see this also fits the females weight.\\
To verify how well each distribution fits we can do a Q-Q plot for each. By seeing how close the points on the Q-Q plot is to the line we can see if the distribution is a good fit.
#+BEGIN_SRC R :session Q1 :export code :results output :session Part1
# Generate theoretical quantiles from the fitted gamma distribution
gamma_qq_plot <- function(data, shape, scale, main_title) {
  theoretical_quantiles <- qgamma(ppoints(length(data)), shape = shape, scale = scale)
  qqplot(theoretical_quantiles, sort(data), main = main_title,
         xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
  abline(0, 1, col = "red")
}

png("male_age_qq.png", width = 800, height = 800)
gamma_qq_plot(male_data$Age, shape = mom_gamma_age_male$shape,
              scale = mom_gamma_age_male$scale, main_title = "Q-Q Plot for Gamma Fit - Age (Males)")
dev.off()
png("female_age_qq.png", width = 800, height = 800)
gamma_qq_plot(female_data$Age, shape = mom_gamma_age_female$shape,
              scale = mom_gamma_age_female$scale, main_title = "Q-Q Plot for Gamma Fit - Age (Females)")
dev.off()
png("male_weight_qq.png", width = 800, height = 800)
gamma_qq_plot(male_data$Weight, shape = mom_gamma_weight_male$shape,
              scale = mom_gamma_weight_male$scale, main_title = "Q-Q Plot for Gamma Fit - Weight (Males)")
dev.off()
# Both gamma and normal for females weight
normal_qq_plot <- function(data, mean, sd, main_title) {
  theoretical_quantiles <- qnorm(ppoints(length(data)), mean = mean, sd = sd)
  qqplot(theoretical_quantiles, sort(data), main = main_title,
         xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
  abline(0, 1, col = "red")
}


png("female_weight_gamma_qq.png", width = 800, height = 800)
gamma_qq_plot(female_data$Weight, shape = mom_gamma_weight_female$shape,
              scale = mom_gamma_weight_female$scale, main_title = "Q-Q Plot for Gamma Fit - Weight (Females)")
dev.off()

png("female_weight_normal_qq.png", width = 800, height = 800)
normal_qq_plot(female_data$Weight, mean = mom_normal_weight_female$mean,
               sd = mom_normal_weight_female$sd, main_title = "Q-Q Plot for Normal Fit - Weight (Females)")
dev.off()
#+END_SRC

#+RESULTS:
#+begin_example
null device
          1
null device
          1
null device
          1
null device
          1
null device
          1
#+end_example
#+ATTR_ORG: :width 300
[[file:male_age_qq.png]]
[[file:female_age_qq.png]]
[[file:male_weight_qq.png]]
[[file:female_weight_gamma_qq.png]]

From the Q-Q plots it appears that the gamma distribution fits all the plots well. This is because most of the points are close to the line with the age and male weight. This suggests that the all of the data is gamma distributed. Since we had seen that the female weight is also normal distribution, lets also check its Q-Q plot:
[[file:female_weight_normal_qq.png]]
From the normal female Q-Q plot we can see that the female weight is also normally distributed, as the points are close to the line. However, compared to the gamma Q-Q plot we can see that the normal Q-Q plot has values that are further away from the line towards the tail end of the theoretical quantiles. All of this suggests that the gamma distribution fits the data better than the normal distribution does
** Analysing Football
Next, lets analyse the football data:
#+BEGIN_SRC R :session Q1 :export code :results output :session Part1
Football <- OA[which(OA$Sport=="Football"),]
#str(Football)
#+END_SRC

#+RESULTS:

To analyse how the heights and weights are changing over time we can plot them over time and take an average per year and plot that:
#+BEGIN_SRC R :session Q1 :export code :results output :session Part1
library(ggplot2)
Football_height_clean <- Football[is.finite(Football$Height) & is.finite(Football$Year), ]
Football_weight_clean <- Football[is.finite(Football$Weight) & is.finite(Football$Year), ]
Football_age_clean <- Football[is.finite(Football$Age) & is.finite(Football$Year), ]


png("football_height_time.png", width = 800, height = 800)
ggplot(Football_height_clean, aes(x = Year, y = Height)) +
  geom_point(color = "blue", alpha = 0.5) +
  geom_smooth(method = "loess", color = "red", se = FALSE) +
  labs(title = "Height Over Time", x = "Year", y = "Height (cm)") +
  theme_minimal()
dev.off()

png("football_weight_time.png", width = 800, height = 800)
ggplot(Football_weight_clean, aes(x = Year, y = Weight)) +
  geom_point(color = "blue", alpha = 0.5) +
  geom_smooth(method = "loess", color = "red", se = FALSE) +
  labs(title = "Weight Over Time", x = "Year", y = "Weight (kg)") +
  theme_minimal()
dev.off()

png("football_age_time.png", width = 800, height = 800)
ggplot(Football_age_clean, aes(x = Year, y = Age)) +
  geom_point(color = "blue", alpha = 0.5) +
  geom_smooth(method = "loess", color = "red", se = FALSE) +
  labs(title = "Age Over Time", x = "Year", y = "Age (years)") +
  theme_minimal()
dev.off()
#+END_SRC

#+RESULTS:
: [1m[22m`geom_smooth()` using formula = 'y ~ x'
: null device
:           1
: [1m[22m`geom_smooth()` using formula = 'y ~ x'
: null device
:           1
: [1m[22m`geom_smooth()` using formula = 'y ~ x'
: null device
:           1

#+ATTR_ORG: :width 300
[[file:football_height_time.png]]
[[file:football_weight_time.png]]
[[file:football_age_time.png]]

The weight has gone down considerably since the start of the data being recorded. The height has remained relatively constant over time. Both the weight and height have a bump around 1980, which is not present in the age. The age has also remained mostly constant over time.

Likewise, we can create a similar plot for BMI:
#+BEGIN_SRC R :session Q1 :export code :results output :session Part1
Football$BMI <- Football$Weight/(((10^-2)*Football$Height)^2)
png("football_BMI_time.png", width = 800, height = 800)
ggplot(Football, aes(x = Year, y = BMI)) +
  geom_point(color = "blue", alpha = 0.5) +
  geom_smooth(method = "loess", color = "red", se = FALSE) +
  labs(title = "BMI Over Time", x = "Year", y = "BMI (kg/m^2)") +
  theme_minimal()
dev.off()
#+END_SRC

#+RESULTS:
: [1m[22m`geom_smooth()` using formula = 'y ~ x'
: Warning messages:
: 1: [1m[22mRemoved 2213 rows containing non-finite outside the scale range (`stat_smooth()`).
: 2: [1m[22mRemoved 2213 rows containing missing values or values outside the scale range (`geom_point()`).
: null device
:           1

#+ATTR_ORG: :width 300
[[file:football_BMI_time.png]]
The BMI has changed over time, it has gone down. This is to be expected as the weight has gone down and the weight is directly proportional to the BMI.

**Extension:** To analyse how much effect height, weight and age has on your ability to get a medal we can compare the means of the medallist to the mean of the non-medallist.

#+BEGIN_SRC R :session Q1 :export code :results output :session Part1
# Filter out non-finite values for Height, Weight, and Age
Football_clean <- Football %>%
  filter(is.finite(Height), is.finite(Weight), is.finite(Age))

summary_stats <- Football_clean %>%
  group_by(Medal) %>%
  summarize(
    Mean_Height = mean(Height, na.rm = TRUE),
    Mean_Weight = mean(Weight, na.rm = TRUE),
    Mean_Age = mean(Age, na.rm = TRUE),
    Count = n()
  )

print(summary_stats)
#+END_SRC

#+RESULTS:
: [38;5;246m# A tibble: 4 × 5[39m
:   Medal  Mean_Height Mean_Weight Mean_Age Count
:   [3m[38;5;246m<fct>[39m[23m        [3m[38;5;246m<dbl>[39m[23m       [3m[38;5;246m<dbl>[39m[23m    [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<int>[39m[23m
: [38;5;250m1[39m Bronze        176.        71.0     24.3   366
: [38;5;250m2[39m Gold          175.        70.2     24.4   364
: [38;5;250m3[39m None          175.        70.4     23.4  [4m3[24m359
: [38;5;250m4[39m Silver        176.        71.0     24.0   354


#+ATTR_LATEX: :environment longtable :align |l|l|l|l|l|
|--------+-------------+-------------+----------+-------|
| Medal  | Mean Height | Mean Weight | Mean Age | Count |
|--------+-------------+-------------+----------+-------|
| Bronze |        176. |        71.0 |     24.3 |   366 |
|--------+-------------+-------------+----------+-------|
| Gold   |        175. |        70.2 |     24.4 |   364 |
|--------+-------------+-------------+----------+-------|
| None   |        175. |        70.4 |     23.4 |   359 |
|--------+-------------+-------------+----------+-------|
| Silver |        176. |        71.0 |     24.0 |   354 |
|--------+-------------+-------------+----------+-------|

Height and weight appear to be non-factors, the mean of each medal are similar to one another. The age appears to be a minor factor. Being slightly older increases your chances of getting a medal.

**Extension:** This data does not represent how the general human population has changed over time, as this data only includes Olympic athletes. The general population is not an Olympic athlete, so this data should not be used to estimate the general population. On top of that there are many factors that have may have changed in Olympic athletes and not other people, for example, Olympic athletes are more inclined to maintain a healthier diet. This data represents the *peak* human, and not the general population.

Lets check which country tents to win the most medals.
#+BEGIN_SRC R :session Q1 :export code :results output :session Part1
library(dplyr)

# Calculate medals per athlete by country
medals_per_athlete <- OA %>%
  filter(!is.na(Medal)) %>%
  group_by(NOC) %>%
  summarize(
    Total_Medals = n(),
    Unique_Athletes = n_distinct(ID),
    Medals_per_Athlete = Total_Medals / Unique_Athletes
  ) %>%
  arrange(desc(Medals_per_Athlete))

# Display the top country
head(medals_per_athlete, 1)
#+END_SRC

#+RESULTS:
: [38;5;246m# A tibble: 1 × 4[39m
:   NOC   Total_Medals Unique_Athletes Medals_per_Athlete
:   [3m[38;5;246m<chr>[39m[23m        [3m[38;5;246m<int>[39m[23m           [3m[38;5;246m<int>[39m[23m              [3m[38;5;246m<dbl>[39m[23m
: [38;5;250m1[39m LIE            369             131               2.82

#+ATTR_LATEX: :environment longtable :align |l|l|l|l|
|-----+--------------+-----------------+--------------------|
| NOC | Total Medals | Unique Athletes | Medals per Athlete |
|-----+--------------+-----------------+--------------------|
| NIL |           80 |              58 |               1.38 |
|-----+--------------+-----------------+--------------------|

Lets check which nationality has the most biased male to female ratio.
#+BEGIN_SRC R :session Q1 :export code :results output :session Part1
gender_ratio <- OA %>%
  group_by(NOC) %>%
  summarize(
    Male_Athletes = sum(Sex == "M"),
    Female_Athletes = sum(Sex == "F"),
    Male_Female_Ratio = Male_Athletes / Female_Athletes
  ) %>%
  filter(is.finite(Male_Female_Ratio)) %>%
  arrange(desc(abs(log(Male_Female_Ratio))))

head(gender_ratio, 1)
#+END_SRC

#+RESULTS:
: [38;5;246m# A tibble: 1 × 4[39m
:   NOC   Male_Athletes Female_Athletes Male_Female_Ratio
:   [3m[38;5;246m<chr>[39m[23m         [3m[38;5;246m<int>[39m[23m           [3m[38;5;246m<int>[39m[23m             [3m[38;5;246m<dbl>[39m[23m
: [38;5;250m1[39m BOH             151               2              75.5

#+ATTR_LATEX: :environment longtable :align |l|l|l|l|
|-----+---------------+-----------------+-------------------|
| NOC | Male Athletes | Female Athletes | Male Female Ratio |
|-----+---------------+-----------------+-------------------|
| BOH |           151 |               2 |              75.5 |
|-----+---------------+-----------------+-------------------|


Lets check the probability that someone from the USA will win a medal.
#+BEGIN_SRC R :session Q1 :export code :results output :session Part1
usa_medal_probability <- OA %>%
  filter(NOC == "USA") %>%
  summarize(Probability = mean(Medal != "None"))
usa_medal_probability
#+END_SRC

#+RESULTS:
: Probability
: 1   0.2989975
The probability of a person with the nationality of The United States of America wins a medal is 0.2989975.
