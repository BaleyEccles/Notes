:PROPERTIES:
:ID:       fb866e0b-9934-4d65-8690-fb73e8c3e1d0
:END:
#+title: KME272 - Assesment 4.1
#+date: [Friday 11th October, 23:59]
#+AUTHOR: Baley Eccles - 652137
#+FILETAGS: :Assignment:TODO:
#+STARTUP: latexpreview
#+LATEX_HEADER: \usepackage[a4paper, margin=2.5cm]{geometry}
#+LATEX_HEADER_EXTRA: \usepackage{minted}
#+LATEX_HEADER_EXTRA: \usepackage{fontspec}
#+LATEX_HEADER_EXTRA: \setmonofont{Iosevka}
#+LATEX_HEADER_EXTRA: \setminted{fontsize=\small, frame=single, breaklines=true}
#+LATEX_HEADER_EXTRA: \usemintedstyle{emacs}
#+LATEX_HEADER_EXTRA: \usepackage[backend=biber,style=apa]{biblatex}
#+LATEX_HEADER_EXTRA: \addbibresource{citation.bib}
#+LATEX_HEADER_EXTRA: \usepackage{float}

* KME272, Probability & Statistics Assignment 1

** Inspecting the data
 - Load the airquality data into R.

#+begin_src R :session Q1 :export code :results output
rm(list = ls());
data("airquality");


#+end_src

#+RESULTS:


 - Use the help("airquality") command to find out about the data. Convert the values to m/s for wind speed and Celcius for temperature. Give a brief description of the data in your own words.

#+begin_src R :session Q1 :export code :results output
#help("airquality");
airquality$Wind <- airquality$Wind * 0.44704
airquality$Temp <- (airquality$Temp - 32) * 5/9

result <- data.frame(Wind = airquality$Wind, Temp = airquality$Temp)
print(result)
#+end_src


The ~airquality~ data set contains four measured values of the air quality in New York from May 1, 1973 to September 30, 1973.

 - Plot the daily temperature vs time, and the daily Solar.R through time, and comment on any trends or patterns you see.

#+begin_src R :session Q11 :export code :results output
rm(list = ls());
data("airquality")

airquality$Date <- as.Date(paste(1973, airquality$Month, airquality$Day, sep = "-"))
airquality$Wind <- airquality$Wind * 0.44704
airquality$Temp <- (airquality$Temp - 32) * 5/9

png("AirQuality_Temperature.png", width = 800, height = 600)
plot(airquality$Date, airquality$Temp, type = "l", col = "blue",
     main = "Daily Average Temperature in New York (1973)",
     xlab = "Date", ylab = "Average Temperature (°C)")
dev.off()

png("AirQuality_SolarRadiation.png", width = 800, height = 600)
plot(airquality$Date, airquality$Solar.R, type = "l", col = "orange",
     main = "Daily Average Solar Radiation in New York (1973)",
     xlab = "Date", ylab = "Average Solar Radiation (Langley)")
dev.off()
#+end_src

#+RESULTS:
: null device
:           1
: null device
:           1

[[file:AirQuality_Temperature.png]]
[[file:AirQuality_SolarRadiation.png]]

It appears that the temperature rises during the middle months, which would relate to summer in the New York. And the solar radiation appears to remain similar through out the data, with a little lower average in the latter months.


** Summarise the data

 - Calculate the mean, median, and variance of each variable. You may have to deal with missing values (look up how).
#+begin_src R :session Q2 :export code :results output
rm(list = ls());

data("airquality")

airquality$Temp <- (airquality$Temp - 32) * 5/9
airquality$Wind <- airquality$Wind * 0.44704

summary_stats <- summary(airquality)
print(summary_stats)
var(airquality$Ozone)
var(airquality$Solar.R)
var(airquality$Wind)
var(airquality$Temp)
var(airquality$Month)
var(airquality$Day)
#+end_src

#+RESULTS:
#+begin_example
Ozone           Solar.R           Wind            Temp           Month            Day
 Min.   :  1.00   Min.   :  7.0   Min.   :0.760   Min.   :13.33   Min.   :5.000   Min.   : 1.0
 1st Qu.: 18.00   1st Qu.:115.8   1st Qu.:3.308   1st Qu.:22.22   1st Qu.:6.000   1st Qu.: 8.0
 Median : 31.50   Median :205.0   Median :4.336   Median :26.11   Median :7.000   Median :16.0
 Mean   : 42.13   Mean   :185.9   Mean   :4.451   Mean   :25.49   Mean   :6.993   Mean   :15.8
 3rd Qu.: 63.25   3rd Qu.:258.8   3rd Qu.:5.141   3rd Qu.:29.44   3rd Qu.:8.000   3rd Qu.:23.0
 Max.   :168.00   Max.   :334.0   Max.   :9.254   Max.   :36.11   Max.   :9.000   Max.   :31.0
 NA's   :37       NA's   :7
[1] NA
[1] NA
[1] 2.480381
[1] 27.65165
[1] 2.006536
[1] 78.57972
#+end_example


Mean Temperature (°C): 25.490196 \\
Median Temperature (°C): 26.111111 \\
Variance of Temperature (°C): 27.651645 \\
Mean Wind Speed (m/s): 4.451408 \\
Median Wind Speed (m/s): 4.336288 of Wind Speed (m/s): 2.480380 \\

 - Calculate the probability that the wind speed measured on any day will be above 5m/s. (Hint: the which command can be used to create a list of which values satisfy a particular condition, e.g. which(airquality$Temp < 20) and you can use the length command to see how long that list is.)
#+begin_src R :session Q2 :export code :results output
above_5ms <- which(airquality$Wind > 5)
prob_wind_above_5 <- length(above_5ms) / nrow(airquality)

print(paste("Probability that the wind speed is above 5 (m/s):", prob_wind_above_5))
#+end_src

#+RESULTS:
: [1] "Probability that the wind speed is above 5 (m/s): 0.34640522875817"

 - Calculate the conditional probability that the temperature will be below 25C wind speed is above 5m/s.
#+begin_src R :session Q2 :export code :results output
temp_below_25_given_wind_above_5 <- airquality$Temp < 25 & airquality$Wind > 5
conditional_prob <- sum(temp_below_25_given_wind_above_5, na.rm = TRUE) / length(above_5ms)

print(paste("P(T<25°C|W>5m/s):", conditional_prob))
#+end_src

#+RESULTS:
: [1] "P(T<25°C|W>5m/s) 0.547169811320755"

 - Do you think the two variables (Temp, Wind) are independent? Why / why not?
We can check the correlation coefficient:
#+begin_src R :session Q2 :export code :results output
correlation <- cor(airquality$Temp, airquality$Wind, use = "complete.obs")

print(paste("The correlation coefficient of the Temp and Wind:", correlation))
#+end_src

#+RESULTS:
: [1] "The correlation coefficient of the Temp and Wind: -0.457987879104833"

It is ~-0.46~, which is not particularly close to zero, so they are correlated.

** Correlations

 - Plot the airquality data as x-y plots with appropriate labels (title, axes). Note any obvious patterns about the data, e.g., correlations or trends.
    - Extension task: Find out how to fit a straight line to a set of bivariate data, and add that line to your plots. You may find the R commands abline and lm useful.
#+begin_src R :session Q3 :export code :results output
data("airquality")

airquality$Temp <- (airquality$Temp - 32) * 5/9
airquality$Wind <- airquality$Wind * 0.44704

png("Subplots.png", width = 1200, height = 800)

par(mfrow = c(2, 3))

plot(airquality$Solar.R, airquality$Ozone,
     main = "Ozone vs. Solar Radiation",
     xlab = "Solar Radiation (Langley)",
     ylab = "Ozone (ppb)",
     pch = 19, col = "blue")
abline(lm(Ozone ~ Solar.R, data = airquality), col = "red")

plot(airquality$Wind, airquality$Ozone,
     main = "Ozone vs. Wind Speed",
     xlab = "Wind Speed (m/s)",
     ylab = "Ozone (ppb)",
     pch = 19, col = "blue")
abline(lm(Ozone ~ Wind, data = airquality), col = "red")

plot(airquality$Temp, airquality$Ozone,
     main = "Ozone vs. Temperature",
     xlab = "Temperature (°C)",
     ylab = "Ozone (ppb)",
     pch = 19, col = "blue")
abline(lm(Ozone ~ Temp, data = airquality), col = "red")

plot(airquality$Solar.R, airquality$Wind,
     main = "Wind Speed vs. Solar Radiation",
     xlab = "Solar Radiation (Langley)",
     ylab = "Wind Speed (m/s)",
     pch = 19, col = "blue")
abline(lm(Wind ~ Solar.R, data = airquality), col = "red")

plot(airquality$Solar.R, airquality$Temp,
     main = "Temperature vs. Solar Radiation",
     xlab = "Solar Radiation (Langley)",
     ylab = "Temperature (°C)",
     pch = 19, col = "blue")
abline(lm(Temp ~ Solar.R, data = airquality), col = "red")

plot(airquality$Wind, airquality$Temp,
     main = "Temperature vs. Wind Speed",
     xlab = "Wind Speed (m/s)",
     ylab = "Temperature (°C)",
     pch = 19, col = "blue")
abline(lm(Temp ~ Wind, data = airquality), col = "red")
dev.off()
#+end_src

#+RESULTS:
: null device
:           1


From the plots we can notice that:
 1. As the solar radiation increase, so does the ozone
    - This is expected, because ozone can be created using UV light, which comes from the solar radiation
 2. As the wind speed increases, the ozone decreases
 3. As the temperature increases, so does the ozone

 - Calculate all the linear correlations between the four variables of interest using the cor command. You can find out how to invoke it with help(cor).
#+begin_src R :session Q3 :export code :results output
cor_matrix <- cor(airquality[, c("Ozone", "Solar.R", "Wind", "Temp")], use = "complete.obs")
print(cor_matrix)
#+end_src

#+RESULTS:
:          Ozone      Solar.R   Wind        Temp
: Ozone    1.0000000  0.3483417 -0.6124966  0.6985414
: Solar.R  0.3483417  1.0000000 -0.1271835  0.2940876
: Wind    -0.6124966 -0.1271835  1.0000000 -0.4971897
: Temp     0.6985414  0.2940876 -0.4971897  1.0000000


 - Use the cor.test command to calculate the p-values for these correlations. Remember that these p-values are a bit suspect (for reasons not yet covered in class) so should only be used as a guide. Are any of the relationships significant according to this test?
#+begin_src R :session Q3 :export code :results output
cor_test_results <- function(x, y) {
  test <- cor.test(x, y, use = "complete.obs")
  return(c(correlation = test$estimate, p.value = test$p.value))
}

p_values <- list(
  Ozone_Solar_R = cor_test_results(airquality$Ozone, airquality$Solar.R),
  Ozone_Wind = cor_test_results(airquality$Ozone, airquality$Wind),
  Ozone_Temp = cor_test_results(airquality$Ozone, airquality$Temp),
  Solar_R_Wind = cor_test_results(airquality$Solar.R, airquality$Wind),
  Solar_R_Temp = cor_test_results(airquality$Solar.R, airquality$Temp),
  Wind_Temp = cor_test_results(airquality$Wind, airquality$Temp)
)

print(p_values)
#+end_src

#+RESULTS:
#+begin_example
$Ozone_Solar_R
correlation.cor         p.value
   0.3483416930    0.0001793109

$Ozone_Wind
correlation.cor         p.value
  -6.015465e-01    9.271974e-13

$Ozone_Temp
correlation.cor         p.value
   6.983603e-01    2.931897e-18

$Solar_R_Wind
correlation.cor         p.value
    -0.05679167      0.49595521

$Solar_R_Temp
correlation.cor         p.value
   0.2758402713    0.0007517729

$Wind_Temp
correlation.cor         p.value
  -4.579879e-01    2.641597e-09
#+end_example

 - Which variable (Solar.R, Wind, Temp) do you think has the strongest effect on Ozone? Justify your answer.
Temperature has the strongest effect on ozone. It has a p-value of 2.932e-18, which is highly significant, and a correlation coefficient of 0.6985, indicating a string positive correlation.
** Distributions

 - Plot the distributions of each of the variables either with a histogram or a density (or both).
#+begin_src R :session Q3 :export code :results output
rm(list = ls());

data("airquality")
airquality$Temp <- (airquality$Temp - 32) * 5/9
airquality$Wind <- airquality$Wind * 0.44704


temp_data <- na.omit(airquality$Temp)
ozone_data <- na.omit(airquality$Ozone)
wind_data <- na.omit(airquality$Wind)
SolarR_data <- na.omit(airquality$Solar.R)

png("Temp.png", width = 800, height = 600)
hist(temp_data, breaks = 20, probability = TRUE,
     main = "Temperature Distribution",
     xlab = "Temperature (°C)", col = "lightblue")
lines(density(temp_data), col = "red", lwd = 2)
dev.off()

png("Ozone.png", width = 800, height = 600)
hist(ozone_data, breaks = 20, probability = TRUE,
     main = "Ozone Distribution",
     xlab = "Ozone (ppb)", col = "lightblue")
lines(density(ozone_data), col = "red", lwd = 2)
dev.off()

png("Wind.png", width = 800, height = 600)
hist(wind_data, breaks = 20, probability = TRUE,
     main = "Wind Speed Distribution",
     xlab = "Wind (m/s)", col = "lightblue")
lines(density(wind_data), col = "red", lwd = 2)
dev.off()

png("SolarR.png", width = 800, height = 600)
hist(SolarR_data, breaks = 20, probability = TRUE,
     main = "Solar Radiation Distribution",
     xlab = "Solar Radiation (Langley)", col = "lightblue")
lines(density(SolarR_data), col = "red", lwd = 2)
dev.off()
#+end_src

#+RESULTS:
: null device
:           1
: null device
:           1
: null device
:           1
: null device
:           1


[[file:Temp.png]]
[[file:Ozone.png]]
[[file:Wind.png]]
[[file:SolarR.png]]

 - What distribution do you think best fits the temperature values? Why?
The best fit appears to be a normal distribution. This is because it is unimodal, and is bell shaped.
 - Describe the distribution of wind speed values: is it skewed? symmetric? normal?
It appears to have two peaks (bimodal) and looks skewed to the right. It does not look symmetric and does not appear to fit a normal distribution.
 - Overlay a plot of the normal distribution with mean and standard deviation equal to those of the wind speed values, over your plot of the wind speed. How well or badly does it fit? Do you maintain your position on whether the wind speed is normally distributed?
#+begin_src R :session Q3 :export code :results output
mean_wind <- mean(airquality$Wind, na.rm = TRUE)
sd_wind <- sd(airquality$Wind, na.rm = TRUE)

x_values <- seq(min(airquality$Wind), max(airquality$Wind), length.out = 100)
y_values <- dnorm(x_values, mean = mean_wind, sd = sd_wind)

png("Wind_Normal.png", width = 800, height = 600)
hist(airquality$Wind, breaks = 20, probability = TRUE,
     main = "Wind Speed Distribution with Normal Overlay",
     xlab = "Wind Speed (m/s)", col = "lightblue")
lines(density(airquality$Wind), col = "blue", lwd = 2)
lines(x_values, y_values, col = "red", lwd = 2)
dev.off()
#+end_src

#+RESULTS:
: null device
:           1

[[file:Wind_Normal.png]]



This normal distribution fits very well. I am retracting my previous assessment of the distribution. It does appear to be normally distributed.
